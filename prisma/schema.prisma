datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  schemas   = ["link"]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@schema("link")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("link")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          Role       @default(User)
  displayName   String?
  description   String?
  visibility    Visibility @default(Private)
  links         Link[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@schema("link")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@schema("link")
}

model Link {
  id       String   @id @default(cuid())
  platform Platform
  username String
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String

  @@schema("link")
}

enum Visibility {
  Public
  Unlisted
  Private

  @@schema("link")
}

enum Platform {
  GitHub
  YouTube
  Instagram

  @@schema("link")
}

enum Role {
  User
  Admin

  @@schema("link")
}
